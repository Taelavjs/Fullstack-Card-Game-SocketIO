{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { io } from \"socket.io-client\";\nconst URL = \"http://localhost:3000\";\nconst useSocket = () => {\n  _s();\n  const socketRef = useRef(null);\n  useEffect(() => {\n    // Initialize the socket connection\n    socketRef.current = io(URL, {\n      autoConnect: false\n    });\n\n    // Clean up the socket connection when the component unmounts\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  return socketRef.current;\n};\n_s(useSocket, \"8c0rAI93JE8jpOVTnobt43KkFfY=\");\nexport default {\n  useSocket\n};","map":{"version":3,"names":["React","useRef","useEffect","io","URL","useSocket","_s","socketRef","current","autoConnect","disconnect"],"sources":["/Users/tvjsenior/FullstackGame/FrontEndFiles/client/src/socket.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { io } from \"socket.io-client\";\n\nconst URL = \"http://localhost:3000\"; \n\nconst useSocket = () => {\n  const socketRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize the socket connection\n    socketRef.current = io(URL, { autoConnect: false });\n    \n    // Clean up the socket connection when the component unmounts\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, []); // Empty dependency array ensures this effect runs only once\n\n  return socketRef.current;\n};\n\nexport default { useSocket };\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,EAAE,QAAQ,kBAAkB;AAErC,MAAMC,GAAG,GAAG,uBAAuB;AAEnC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd;IACAK,SAAS,CAACC,OAAO,GAAGL,EAAE,CAACC,GAAG,EAAE;MAAEK,WAAW,EAAE;IAAM,CAAC,CAAC;;IAEnD;IACA,OAAO,MAAM;MACX,IAAIF,SAAS,CAACC,OAAO,EAAE;QACrBD,SAAS,CAACC,OAAO,CAACE,UAAU,CAAC,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,OAAOH,SAAS,CAACC,OAAO;AAC1B,CAAC;AAACF,EAAA,CAhBID,SAAS;AAkBf,eAAe;EAAEA;AAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}